[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Hi, I’m Victoria Neo",
    "section": "",
    "text": "sequenceDiagram\n  participant My brain\n  participant Me doing VAA\n  participant My son\n  My son-&gt;&gt;Me doing VAA: Mum, why are you not playing with us?\n  Me doing VAA-&gt;&gt;My son: Because I have to do work.\n  My son-&gt;&gt;Me doing VAA: Why are you so slow?\n  My brain-&gt;&gt;Me doing VAA: I can't say because I am dumb... 🥲    \n  Me doing VAA-&gt;&gt;My son: Because it takes time to do a good job! \n  My son-&gt;&gt;Me doing VAA: But, if you don't like it, why do you do it?\n  Me doing VAA-&gt;&gt;My son: Do you do things that you don't like?\n  My son-&gt;&gt;Me doing VAA: No!\n  My brain-&gt;&gt;Me doing VAA: But... but I have no choice... 🥲 \n  Me doing VAA-&gt;&gt;My son: Well, sometimes you have to do things you don't like so as to reach what makes you happy.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntimeline\n        title Going through VAA\n        section January\n          7-13 Jan : Quarto, Netlify, R, GitHub\n                  : A Layered Grammar of Graphics and ggplot2\n                  : 🙃\n          14-20 Jan \n          21-27 Jan \n        section February\n          28-3 Feb  \n          4-10 Feb \n          11-17 Feb \n          18-24 Feb \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   \n     \n     \n       Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\n\n\n\n\nJan 12, 2024\n\n\nHands-on Exercise 1\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "🚧 Under Construction"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "Values\nSpecial Remarks\n\n\n\n\nWork done\n1) Set up RStudio, Quarto and Netlify\n2) Set up Git, GitHub and RStudio\n3) IDEA on exam_data\n4) Hands-on Exercise 1\nWill take some time to think about the design of the website\n\n\nHours taken\n20 hours\nTwo sick kids\n\n\nReflections\n4\nOverall Reflections\nReflection 1\nReflection 2\nReflection 3\n\n\nQuestions\n2\n?Question? 1\n?Question? 2\n\n\n\n\n\n\n\n\n\nHow do I feel?\n\n\n\nWhat do I think?\nThis Hands-on Exercise 1 reminded me of DAL Hands-on Exercises. It allowed me to form a concrete connection between theory (A Layered Grammar of Graphics) and practice (different Geometric Objects, types of Facets etc.). It was interesting to see different examples of the layers but after awhile it got a little tedious. I did have a lot of time to play around with Quarto and RStudio so that I could quickly familiarise myself.\nI do hope to see more of how we can structure our thinking of data analytics according to a Layered Grammar of Graphics (Am loving this!). I am looking forward to this course!"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launch-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#plotting-a-simple-bar-chart",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "code block\nggplot(data = exam_data, \n       aes(x = RACE)) +\n  geom_bar()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#data",
    "title": "Hands-on Exercise 1",
    "section": "1: Data",
    "text": "1: Data\n\n1.1 Installing and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\n\ncode block\npacman::p_load(tidyverse, kableExtra)\n\n\n\n\n\n\n\n\nReflection 1\n\n\n\nI am an absolute newbie in R and Quarto. This page is only possible by standing on the shoulders of giants. Definitely inspired by Hailey! Just doing extra stuff of IDEA before getting to the Hands-on Exercise.\n\n\n\n\n1.2 Data Set\nThe dataset, Exam_data.csv, contains the Year-end examination grades of a cohort of primary 3 students from a local school, and is uploaded as exam_data.\n\n1.2.1 Importing exam_data\n\n\ncode block\nexam_data &lt;- read_csv(\"data/Exam_data.csv\", show_col_types = FALSE)\n\n\n\n\n1.2.2 Summary Statistic of exam_data\n\n\n\n\n\n\nReflection 2\n\n\n\nI was unsure of the R codes needed to do data cleaning and so referred to Hailey’s website, Data Cleaning in R, and Data Cleaning in R Made Simple. I am happy that the dataset was quite clean.\n\n\n\nData TableData StructureData Health\n\n\n\nDisplaying the first 5 rows of exam_data using head():\n\n\ncode block\nhead(exam_data,5) %&gt;%\n  kbl() %&gt;%\n  kable_material()\n\n\n\n\n\nID\nCLASS\nGENDER\nRACE\nENGLISH\nMATHS\nSCIENCE\n\n\n\n\nStudent321\n3I\nMale\nMalay\n21\n9\n15\n\n\nStudent305\n3I\nFemale\nMalay\n24\n22\n16\n\n\nStudent289\n3H\nMale\nChinese\n26\n16\n16\n\n\nStudent227\n3F\nMale\nChinese\n27\n77\n31\n\n\nStudent318\n3I\nMale\nMalay\n27\n11\n25\n\n\n\n\n\n\n\n\n\n\n\nChecking the structure of exam_data using str():\n\n\ncode block\nstr(exam_data)\n\n\nspc_tbl_ [322 × 7] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ ID     : chr [1:322] \"Student321\" \"Student305\" \"Student289\" \"Student227\" ...\n $ CLASS  : chr [1:322] \"3I\" \"3I\" \"3H\" \"3F\" ...\n $ GENDER : chr [1:322] \"Male\" \"Female\" \"Male\" \"Male\" ...\n $ RACE   : chr [1:322] \"Malay\" \"Malay\" \"Chinese\" \"Chinese\" ...\n $ ENGLISH: num [1:322] 21 24 26 27 27 31 31 31 33 34 ...\n $ MATHS  : num [1:322] 9 22 16 77 11 16 21 18 19 49 ...\n $ SCIENCE: num [1:322] 15 16 16 31 25 16 25 27 15 37 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   ID = col_character(),\n  ..   CLASS = col_character(),\n  ..   GENDER = col_character(),\n  ..   RACE = col_character(),\n  ..   ENGLISH = col_double(),\n  ..   MATHS = col_double(),\n  ..   SCIENCE = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt; \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere are 322 rows and 7 variables. The output reveals that the variables have been assigned their correct data types.\n\n\n\n\n\n\nChecking for any symptoms of messy data:\n\n1. Checking for duplicates:\n\n\ncode block\nexam_data[duplicated(exam_data),]\n\n\n# A tibble: 0 × 7\n# ℹ 7 variables: ID &lt;chr&gt;, CLASS &lt;chr&gt;, GENDER &lt;chr&gt;, RACE &lt;chr&gt;,\n#   ENGLISH &lt;dbl&gt;, MATHS &lt;dbl&gt;, SCIENCE &lt;dbl&gt;\n\n\n\n\n\n\n\n\nNote\n\n\n\nThere were no duplicated rows found in exam_data.\n\n\n\n\n2. Checking missing values:\n\n\ncode block\nsum(is.na(exam_data))\n\n\n[1] 0\n\n\n\n\n\n\n\n\nNote\n\n\n\nThere were no missing values found in exam_data.\n\n\n\n\n3. Checking for String inconsistencies:\n3.1 In CLASS\n\n\ncode block\nunique(exam_data$CLASS)\n\n\n[1] \"3I\" \"3H\" \"3F\" \"3G\" \"3E\" \"3C\" \"3D\" \"3A\" \"3B\"\n\n\n3.2 In GENDER\n\n\ncode block\nunique(exam_data$GENDER)\n\n\n[1] \"Male\"   \"Female\"\n\n\n3.3 In RACE\n\n\ncode block\nunique(exam_data$RACE)\n\n\n[1] \"Malay\"   \"Chinese\" \"Indian\"  \"Others\" \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere were no string inconsistencies found in exam_data.\n\n\n\n\n4 Checking for Data Irregularities:\n4.1 In ENGLISH\n\n\ncode block\nsummary(exam_data$ENGLISH)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  21.00   59.00   70.00   67.18   78.00   96.00 \n\n\n4.2 In MATHS\n\n\ncode block\nsummary(exam_data$MATHS)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   9.00   58.00   74.00   69.33   85.00   99.00 \n\n\n4.3 In SCIENCE\n\n\ncode block\nsummary(exam_data$SCIENCE)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  15.00   49.25   65.00   61.16   74.75   96.00 \n\n\n\n\n\n\n\n\nNote\n\n\n\nThere were no data irregularities found in exam_data."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#hands-on-exercise",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#hands-on-exercise",
    "title": "Hands-on Exercise 1",
    "section": "2: Hands-on Exercise",
    "text": "2: Hands-on Exercise\n\n2.1 R Graphics vs ggplot\n\nR Graphicsggplot2\n\n\n\n\ncode block\nhist(exam_data$MATHS)\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode block\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme(plot.title = element_text(hjust = 0.5))\n\n\n\n\n\n\n\n\n\n\n\n\n\n2.1.1 Why ggplot2 is recommended?\n\n\n\n\n\n\nReflection 3\n\n\n\nI’d like to conclude the preference for ggplot2 based on the differences below is based entirely on the subjective notion of “what is pleasing to the eye”.\n\nThe title and axis titles of ggplot2 make more sense than R Graphics . Their positions are also clear but I would prefer the ggtitle to be centered, rather than at the side so I added one extra line of code).\nWhile binning on 10 with ggplot2 is the same number of bins as R Graphics, ggplot2 gives us quartiles - Quartiles are useful for the measure of central tendency and spread for highly skewed data, which is the case for MATHS.\nThe background of ggplot2 have grid lines which makes it easier for the eye to follow the values.\n\n\n\nApparently, this is due to the notion of visual variables (that was introduced by Jacques Bertin in 1967) and the associated levels of perception affect the effectiveness of data visualisation.\n\nThe transferable skills from ggplot2 are not the idiosyncrasies of plotting syntax, but a powerful way of thinking about visualisation, as a way of mapping between variables and the visual properties of geometric objects that you can perceive. ~Hadley Wickham\n\n\n\n\n\n\n\nAm loving this!\n\n\n\nInterestingly, how we visualise this data should reflect how we make sense of the world. The following quote also stood out for me as it reinforces the notion that data visualisation is not isolated from data analysis - “Data analysis without data visualisation is no data analysis” (Cleveland, 1994 in Kam, 2023).\n\nggplot2 is designed to work iteratively. You start with a layer that shows the raw data. Then you add layers of annotations and statistical summaries. This allows you to produce graphics using the same structured thinking that you would use to design an analysis. This reduces the distance between the plot in your head and the one on the page. This is especially helpful for students who have not yet developed the structured approach to analysis used by experts. ~Hadley Wickham (bold my own)\n\n\n\n\n\n\n2.2 A Layered Grammar of Graphics\n\n\n\nReference: Hadley Wickham (2010) “A layered grammar of graphics.” Journal of Computational and Graphical Statistics, vol. 19, no. 1, pp. 3–28.\n\n\n\nData: The dataset being plotted.\nAesthetics take attributes of the data and use them to influence visual characteristics, such as position, colours, size, shape, or transparency.\nGeometrics: The visual elements used for our data, such as point, bar or line.\nFacets split the data into subsets to create multiple variations of the same graph (paneling, multiple plots).\nStatistics, statiscal transformations that summarise data (e.g. mean, confidence intervals).\nCoordinate systems define the plane on which data are mapped on the graphic.\nThemes modify all non-data components of a plot, such as main title, sub-title, y-aixs title, or legend background.\n\n\n\n2.3 Essential Grammatical Elements in ggplot2: data\n\n\ncode block\nggplot(data=exam_data)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nA blank canvas appears.\nggplot() initializes a ggplot object.\nThe data argument defines the dataset to be used for plotting.\nIf the dataset is not already a data.frame, it will be converted to one by fortify().\n\n\n\n\n\n2.4 Essential Grammatical Elements in ggplot2: Aesthetic mappings\nAesthetic mappings take attributes of the data and use them to influence visual characteristics such as position, colour, size, shape, or transparency (also part of Bertin’s and other researchers’ set of “retinal” variables). Each visual characteristic can thus encode an aspect of the data and be used to convey information.\nAll aesthetics of a plot are specified in the aes() function call (each geom layer can have its own aes specification).\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nggplot includes the x-axis and the axis’s label.\n\n\n\n\n\n2.5 Essential Grammatical Elements in ggplot2: geom\nGeometric objects are the actual marks we put on a plot. Examples include:\n\ngeom_point for drawing individual points (e.g., a scatter plot)\ngeom_line for drawing lines (e.g., for a line charts)\ngeom_smooth for drawing smoothed lines (e.g., for simple trends or approximations)\ngeom_bar for drawing bars (e.g., for bar charts)\ngeom_histogram for drawing binned values (e.g. a histogram)\ngeom_polygon for drawing arbitrary shapes\ngeom_map for drawing polygons in the shape of a map! (You can access the data to use for these maps by using the map_data() function).\n\n\n\nA plot must have at least one geom; there is no upper limit. You can add a geom to a plot using the + operator.\nFor complete list, please refer to here.\n\n\n2.5.1 Geometric Objects: geom_bar\n\n\ncode block\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\n\n\n2.5.2 Geometric Objects: geom_dotplot\nIn a dot plot, the width of a dot corresponds to the bin width (or maximum width, depending on the binning algorithm), and dots are stacked, with each dot representing one observation.\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(dotsize = 0.5)\n\n\nBin width defaults to 1/30 of the range of the data. Pick better value with\n`binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe y scale is not very useful, in fact it is very misleading.\n\n\n\n\n\n\n\n\n?Question? 1\n\n\n\nI wonder why the y scale is suddenly in decimal place (0.00, 0.25 etc) when it was previously in count.\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below performs the following two steps:\n\nscale_y_continuous() is used to turn off the y-axis, and\nbinwidth argument is used to change the binwidth to 2.5.\n\n\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n?Question? 2\n\n\n\n\nI wonder why the binwidth is changed to 2.5. It looks the same as the previous binning.\n\n\n\n\nWith binwidth = 2\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=2,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) \n\n\n\n\n\n\n\n\n\n\n\nWith binwidth = 3.5\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot(binwidth=3.5,         \n               dotsize = 0.5) +      \n  scale_y_continuous(NULL,           \n                     breaks = NULL) \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nbinwidth “controls the width of each bin along the X-axis” (R Coder, 2024). While it might be similar between binwidth = 2.5 and 3, it is more proportionate than when binwidth =2 and 3.5 and therefore pleasing to the eye. Thus, changing to 2.5 is just to address the error code.\n\n\n\n\n2.5.3 Geometric Objects: geom_histogram()\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_histogram() \n\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote that the default bin is 30.\n\n\n\n\n2.5.4 Modifying a geometric object by changing geom()\nIn the code chunk below,\n\nbins argument is used to change the number of bins to 20,\nfill argument is used to shade the histogram with light blue color, and\ncolor argument is used to change the outline colour of the bars in black\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20,            \n                 color=\"black\",      \n                 fill=\"light blue\") \n\n\n\n\n\n\n\n\n\n\n\n2.5.5 Modifying a geometric object by changing aes()\nThe code chunk below changes the interior colour of the histogram (i.e. fill) by using sub-group of aesthetic().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, \n           fill = GENDER)) +\n  geom_histogram(bins=20, \n                 color=\"grey30\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThis approach can be used to colour, fill and alpha of the geometric.\n\n\n\n\n2.5.6 Geometric Objects: geom-density()\ngeom-density() computes and plots kernel density estimate, which is a smoothed version of the histogram.\nIt is a useful alternative to the histogram for continuous data that comes from an underlying smooth distribution.\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\nThe code chunk below plots two kernel density lines by using colour or fill arguments of aes()\n\n\ncode block\nggplot(data=exam_data, \n       aes(x = MATHS, \n           colour = GENDER)) +\n  geom_density()\n\n\n\n\n\n\n\n\n\n\n\n2.5.7 Geometric Objects: geom_boxplot\ngeom_boxplot() displays continuous value list. It visualises five summary statistics (the median, two hinges and two whiskers), and all “outlying” points individually.\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS,       \n           x= GENDER)) +    \n  geom_boxplot()  \n\n\n\n\n\n\n\n\n\nNotches are used in box plots to help visually assess whether the medians of distributions differ. If the notches do not overlap, this is evidence that the medians are different.\nThe code chunk below plots the distribution of Maths scores by gender in notched plot instead of boxplot.\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot(notch=TRUE)\n\n\n\n\n\n\n\n\n\n\n\n2.5.8 Geometric Objects: geom_violin\ngeom_violin is designed for creating violin plot. Violin plots are a way of comparing multiple data distributions. With ordinary density curves, it is difficult to compare more than just a few distributions because the lines visually interfere with each other. With a violin plot, it’s easier to compare several distributions since they’re placed side by side.\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_violin() \n\n\n\n\n\n\n\n\n\n\n\n2.5.9 Geometric Objects: geom_point()\ngeom_point() is especially useful for creating scatterplot.\nThe code chunk below plots a scatterplot showing the Maths and English grades of pupils by using geom_point().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() \n\n\n\n\n\n\n\n\n\n\n\n2.5.10 geom objects can be combined\nThe code chunk below plots the data points on the boxplots by using both geom_boxplot() and geom_point().\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS, \n           x= GENDER)) +\n  geom_boxplot() +                    \n  geom_point(position=\"jitter\", \n             size = 0.5) \n\n\n\n\n\n\n\n\n\n\n\n\n2.6 Essential Grammatical Elements in ggplot2: stat\nThe Statistics functions statistically transform data, usually as some form of summary. For example:\n\nfrequency of values of a variable (bar graph)\n\na mean\na confidence limit\n\nThere are two ways to use these functions:\n\nadd a stat_() function and override the default geom, or\nadd a geom_() function and override the default stat.\n\n\n\n2.6.1 Working with stat()\n\n\n\n\n\n\nNote\n\n\n\nThe boxplots below are incomplete because the positions of the means were not shown.\n\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot()\n\n\n\n\n\n\n\n\n\n\n\n2.6.2 Working with stat - the stat_summary() method\nThe code chunk below adds mean values by using stat_summary() function and overriding the default geom.\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4) \n\n\nWarning: The `fun.y` argument of `stat_summary()` is deprecated as of ggplot2 3.3.0.\nℹ Please use the `fun` argument instead.\n\n\n\n\n\n\n\n\n\n\n\n2.6.3 Working with stat - the geom() method\nThe code chunk below adding mean values by using geom_() function and overriding the default stat.\n\n\ncode block\nggplot(data=exam_data, \n       aes(y = MATHS, x= GENDER)) +\n  geom_boxplot() +\n  geom_point(stat=\"summary\",        \n             fun.y=\"mean\",           \n             colour =\"red\",          \n             size=4) \n\n\nWarning in geom_point(stat = \"summary\", fun.y = \"mean\", colour = \"red\", :\nIgnoring unknown parameters: `fun.y`\n\n\nNo summary function supplied, defaulting to `mean_se()`\n\n\n\n\n\n\n\n\n\n\n\n2.6.4 Adding a best fit curve on a scatterplot?\nThe scatterplot below shows the relationship of Maths and English grades of pupils. The interpretability of this graph can be improved by adding a best fit curve.\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() \n\n\n\n\n\n\n\n\n\nIn the code chunk below, geom_smooth() is used to plot a best fit curve on the scatterplot.\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(size=0.5)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe default method used is loess.\n\n\n\nThe default smoothing method can be overridden as shown below.\n\n\n\n\n\n\nNote\n\n\n\n\nThe method ‘lm’ refers to the linear model.\n\n\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5)\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n2.7 Essential Grammatical Elements in ggplot2: Facets\nFacetting generates small multiples (sometimes also called trellis plot), each displaying a different subset of the data. They are an alternative to aesthetics for displaying additional discrete variables. ggplot2 supports two types of factes, namely: facet_grid() and facet_wrap.\n\n2.7.1 Working with facet_wrap()\nfacet_wrap wraps a 1d sequence of panels into 2d. This is generally a better use of screen space than facet_grid because most displays are roughly rectangular.\nThe code chunk below plots a trellis plot using facet-wrap().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n2.7.2 facet_grid()function\nfacet_grid() forms a matrix of panels defined by row and column facetting variables. It is most useful when you have two discrete variables, and all combinations of the variables exist in the data.\nThe code chunk below plots a trellis plot using facet_grid().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS)) +\n  geom_histogram(bins=20) +\n    facet_wrap(~ CLASS)\n\n\n\n\n\n\n\n\n\n\n\n\n2.8 Essential Grammatical Elements in ggplot2: Coordinates\nThe Coordinates functions map the position of objects onto the plane of the plot. There are a number of different possible coordinate systems to use, they are:\n-   [`coord_cartesian()`](https://ggplot2.tidyverse.org/reference/coord_cartesian.html): the default cartesian coordinate systems, where you specify x and y values (e.g. allows you to zoom in or out). \n-   [`coord_flip()`](https://ggplot2.tidyverse.org/reference/coord_flip.html): a cartesian system with the x and y flipped. \n-   [`coord_fixed()`](https://ggplot2.tidyverse.org/reference/coord_fixed.html): a cartesian system with a \"fixed\" aspect ratio (e.g. 1.78 for a \"widescreen\" plot). \n-   [`coord_quickmap()`](https://ggplot2.tidyverse.org/reference/coord_map.html): a coordinate system that approximates a good aspect ratio for maps.\n\n2.8.1 Working with Coordinate\n\n\n\n\n\n\nNote\n\n\n\nBy the default, the bar chart of ggplot2 is in vertical form.\n\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar()\n\n\n\n\n\n\n\n\n\nThe code chunk below flips the horizontal bar chart into vertical bar chart by using coord_flip().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip()\n\n\n\n\n\n\n\n\n\n\n\n2.8.2 Changing the y- and x-axis range\n\n\n\n\n\n\nWarning\n\n\n\nThe scatterplot below is slightly misleading because the y-axis and x-axis range are not equal.\n\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, size=0.5)\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe code chunk below fixed both the y-axis and x-axis range from 0-100.\n\n\n\n\ncode block\nggplot(data=exam_data, \n       aes(x= MATHS, y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n\n2.9 Essential Grammatical Elements in ggplot2: themes\nThemes control elements of the graph not related to the data. For example:\n\nbackground colour\nsize of fonts\ngridlines\ncolour of labels\n\nBuilt-in themes include: - theme_gray() (default) - theme_bw() - theme_classic()\nA list of theme can be found at this link. Each theme element can be conceived of as either a line (e.g. x-axis), a rectangle (e.g. graph background), or text (e.g. axis title).\n\n2.9.1 Working with theme\nThe code chunk below plot a horizontal bar chart using theme_gray().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_gray()\n\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_classic().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_classic()\n\n\n\n\n\n\n\n\n\nA horizontal bar chart plotted using theme_minimal().\n\n\ncode block\nggplot(data=exam_data, \n       aes(x=RACE)) +\n  geom_bar() +\n  coord_flip() +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#ggplot2",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "code block\nggplot(data=exam_data, aes(x = MATHS)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Hi! I’m Victoria Neo",
    "section": "",
    "text": "University of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011"
  },
  {
    "objectID": "index.html#experience",
    "href": "index.html#experience",
    "title": "Hi! I’m Victoria Neo",
    "section": "",
    "text": "Wengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "index.html#this-space-is-a-documentation-of-my-journey-through-visual-analytics-and-applications-and-what-i-have-learnt-from-and-felt-about-it.",
    "href": "index.html#this-space-is-a-documentation-of-my-journey-through-visual-analytics-and-applications-and-what-i-have-learnt-from-and-felt-about-it.",
    "title": "Hi! I’m Victoria Neo",
    "section": "",
    "text": "Finley Malloc is the Chief Data Scientist at Wengo Analytics. When not innovating on data platforms, Finley enjoys spending time unicycling and playing with her pet iguana.\n\n\nUniversity of California, San Diego | San Diego, CA PhD in Mathematics | Sept 2011 - June 2015\nMacalester College | St. Paul MA B.A in Economics | Sept 2007 - June 2011\n\n\n\nWengo Analytics | Head Data Scientist | April 2018 - present\nGeoScynce | Chief Analyst | Sept 2012 - April 2018"
  },
  {
    "objectID": "index.html#latest-posts",
    "href": "index.html#latest-posts",
    "title": "Hi! I’m Victoria Neo",
    "section": "Latest Posts",
    "text": "Latest Posts"
  },
  {
    "objectID": "index.html#hi-im-victoria-neo",
    "href": "index.html#hi-im-victoria-neo",
    "title": "My Quarto Document",
    "section": "",
    "text": "Victoria Neo\n\n\nSubtitle: I enjoy deep diving into things that spark my creativity. I look forward to the journey and the products I will create."
  },
  {
    "objectID": "index.html#latest-hands-on-exercises-posts",
    "href": "index.html#latest-hands-on-exercises-posts",
    "title": "Hi, I’m Victoria Neo",
    "section": "",
    "text": "Order By\n       Default\n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Title\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nDate\n\n\nTitle\n\n\n\n\n\n\nJan 12, 2024\n\n\nHands-on Exercise 1\n\n\n\n\n\nNo matching items"
  }
]