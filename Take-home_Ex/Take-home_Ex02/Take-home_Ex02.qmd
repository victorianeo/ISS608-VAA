---
title: "Take-home Exercise 2: DataVis Makeover"
subtitle: "[DataVis Makeover of Take-home Exercise 1](https://isss608-ay2023-24jan.netlify.app/take-home_ex/th_ex02)" 
author: "Victoria Neo"
date: 02/01/2024
date-modified: last-modified
format:
  html:
    code-fold: true
    code-summary: "code block"
    code-tools: true
    code-copy: true
    code-block-border-left: "#f9dc5c"
    code-block-background: true
execute:
  warning: false
---

![Histogram, May 1, 2019. *Taken from* [Extreme Makeover: Histogram Edition](https://medium.com/@johnnaujoks/extreme-makeover-histogram-edition-fdb824d7e58)](images/clipboard-508869842.png){fig-align="left" width="455"}

# 1 Setting the scene

## 1.1 The Task

In this take-home exercise, you are required to:

-   select one of the Take-home Exercise 1 prepared by your classmate,

-   critic the submission in terms of clarity and aesthetics,

-   prepare a sketch for the alternative design by using the data visualisation design principles and best practices you had learned in Lesson 1 and 2, and

-   remake the original design by using ggplot2, ggplot2 extensions and tidyverse packages.

::: {.pastbox .past data-latex="code"}
#### **Remember Take-home Exercise 1**

The 2022 Programme for International Student Assessment (PISA) data was released on December 5, 2022. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.

In this take-home exercise, you are required to use appropriate **Exploratory Data Analysis (EDA)** methods and **ggplot2** functions to reveal:

-   the distribution of Singapore studentsâ€™ performance in mathematics, reading, and science, and

-   the relationship between these performances with schools, gender and socioeconomic status (SES) of the students.

```{mermaid}
flowchart TB
  A[School] 
  B[SES]
  C[Gender]
  D[Reading Scores]
  E[Math Scores]
  F[Science Scores]
  
  D --> A
  D --> B
  D --> C
  E --> A
  E --> B
  E --> C
  F --> A
  F --> B
  F --> C
```
:::

## 1.2 Getting Started

### 1.2.1 Installing R packages and loading the dataset

The code chunk below uses p_load() of pacman package to check if tidyverse, ggrepel, ggthemes, hrbrthemes, patchwork and haven packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(ggrepel, patchwork, 
               ggthemes, hrbrthemes,
               tidyverse, kableExtra,
               haven, dplyr,
               ggdist, ggridges,
               colorspace) 
```

The code chunk below reads the .rds file that contains cleaned data about students from Singapore.

```{r}
cleaned_data <-
  read_rds("data/cleaned_studata.rds")
```

# 2 Data Visualisations Makeover

The data visualisations were taken from [here](https://isss608-ay2024-rizfebriansyah.netlify.app/take-home_ex/take-home_ex01/take-home_ex01#reading-as-our-main-focus). I will be doing the makeover according to my favourite ggtheme [theme_fivethirtyeight()](https://abcnews.go.com/538)

## 2.1 **Distribution Across Three Subjects - Mathematics, Reading and Science**

::: grid
::: g-col-5
The author stated:

| *We will now do the plot for each respective subject. We will be doing a histogram to show the distribution across three subjects. The figure in the tabset below displays a composite of three histograms, seamlessly created using patchwork. This is specifically designed for merging separate ggplot2 graphs into a unified figure. The red dotted line indicates the mean.*

He later went on to conclude:

| *The histogram presented above offers a visual representation of the distribution of scores across three academic subjects: MATHEMATICS, READING and SCIENCE. The distribution pattern observed for each subject strongly aligns with the characteristics of **a normal distribution*** (bold my own)*.*
:::

::: g-col-7
![](images/distributions.png){width="500"}
:::
:::

| 
| *A normal distribution is characterised by a symmetrical bell-shaped curve, with the majority of data points clustering around the mean and gradually tapering off towards the extremes. In the context of academic performance, this implies that a significant proportion of students scored close to the average, while fewer students achieved scores either significantly above or below the mean.*

### 2.1.1 Own Thoughts

One key issue I want to highlight is the author's conclusion that the distributions of all three scores are **normal**. My own personal conclusion were the distributions were ***left-skewed***.

::: {.thinkbox .think data-latex="think"}
#### Visual Challenges

-   The visualisations did not clearly represent if the distributions were normal or left-skewed.
:::

### 2.1.2 Critique: Clarity and Aesthetics

This uncertainty could be due to how the data was visualised. By using the principles from [**A Layered Grammar of Graphics**](https://r4va.netlify.app/chap01),

::: grid
::: g-col-4
###### ![](images/clipboard-1344228557.png){width="32"} Level 7: Theme (Colour \| Space)

-   Aesthetics

    -   The blue and red, while to provide contrast, **does not blend well** with the other colours.
    -   Grid lines are soft and not distracting.

-   Clarity

    -   The patchwork neatly puts all the plots in one diagram but the dimensions are **not equally spaced** for each plot (it seems that Science scores are given more weightage than the rest).
:::

::: g-col-8
![](images/distribution1.gif){width="825"}
:::
:::

###### ![](images/clipboard-1690536157.png){width="40" height="40"}Level 7: Theme (Text)

-   Aesthetics

    -   There is too much **cluttered text**: the titles and axes labels are not well placed.
    -   *count* is not placed vertically: may not be necessary

-   Clarity

    -   There is no overall main title or lead-in to provide a context .e.g. the purpose and the story of the data visualisation.

    -   The titles are **repeated** e.g. Math scores and Mathematics.

    -   The axes are **not well-labelled** e.g. Mathematics as the x-axis.

    -   There is **no data source** caption included.

###### ![](images/clipboard-47177670.png){width="35" height="34"}Level 6: Coordinates \| Level 5: Statistics \| Level 3: Geometries \| Level 2: Aesthetics

-   Clarity

    -   The max labelled counts on the x-axis for the three plots are **not consistent** - 800 for Mathematics vs 750 for Reading and Science.

    -   The units of the y-axis for the three plots are **not consistent** - Math is 400, 600, 800 vs 200, 400, 600 and 800 for Reading and Science; and Science's x-axis starts at 200 while the rest appears to start at 0.

    -   The reference line (the mean) was very important for readability but still **failed to fully convey** if it was a normal or left-skewed distribution.

### 2.1.3 Sketch

These are my proposed main changes:

::: grid
::: g-col-5
![](images/clipboard-3895657816.png){width="38"} A well-crafted title and subtitle to provide context.

![](images/clipboard-556412521.png){width="39"} Add a median line together with the mean to clearly portray skewness.

![](images/clipboard-936539531.png){width="37" height="39"} Add a probability density plot to clearly visualise the distribution.

![](images/clipboard-2805879406.png){width="39"} Standardise the axes to improve comparability and interpretability.

![](images/clipboard-591484430.png){width="39" height="36"} Put the three plots side-by-side to improve readability.
:::

::: g-col-7
![](images/makeover1_sketch.png){width="500"}
:::
:::

### 2.1.4 Makeover

The code chunk below prepares the individual histogram plots for each subject.

::: panel-tabset
## Mathematics

```{r}
#| fig-show: hide
#| code-fold: show
math <- ggplot(data = cleaned_data, aes(x = MATH)) +
  geom_histogram(aes(y = after_stat(density)), bins = 20, 
                 boundary = 100,
                 color = "grey25", 
                 fill = "grey90",
                 linewidth = 0.3) +
  geom_density(linewidth = 0.2) +
  coord_cartesian(xlim = c(0, 1000), ylim = c(0, 0.0045))  +
  geom_vline(data = cleaned_data %>%
               summarize(mean_score = mean(MATH), median_score = median(MATH)),
             aes(xintercept = median_score), color = "#008FD5", linetype = "dashed") +  
  geom_text(data = cleaned_data %>%
               summarize(mean_score = mean(MATH), median_score = median(MATH)),
             aes(x = median_score - 100, y = Inf, label = paste("Median:", round(median_score, 0))),
             color = "#008FD5", vjust = 1, hjust = -0.5, size = 3) +
  geom_vline(data = cleaned_data %>%
               summarize(mean_score = mean(MATH), median_score = median(MATH)),
             aes(xintercept = mean_score), color = "#77AB43", linetype = "dashed") +  
  geom_text(data = cleaned_data %>%
               summarize(mean_score = mean(MATH), median_score = median(MATH)),
             aes(x = mean_score - 100, y = Inf, label = paste("Mean:", round(mean_score, 0))),
             color = "#77AB43", vjust = 1, hjust = 0.75, size = 3) +
  scale_x_continuous(breaks = seq(0, 1000, by = 200),  
                     minor_breaks = seq(0, 1000, by = 100)) +
 ylab(NULL) + xlab('Distribution of Math Scores') 

```

## Reading

```{r}
#| fig-show: hide 
#| code-fold: show
read <- ggplot(data=cleaned_data, 
             aes(x= READ)) +
geom_histogram(aes(y = after_stat(density)), bins = 20, 
                 boundary = 100,
                 color = "grey25", 
                 fill = "grey90",
                 linewidth = 0.3) +
  geom_density(linewidth = 0.2) +
  coord_cartesian(xlim = c(0, 1000), ylim = c(0, 0.0045))  +
  geom_vline(data = cleaned_data %>%
               summarize(mean_score = mean(READ), median_score = median(READ)),
             aes(xintercept = median_score), color = "#008FD5", linetype = "dashed") +  
  geom_text(data = cleaned_data %>%
               summarize(mean_score = mean(READ), median_score = median(READ)),
             aes(x = median_score - 100, y = Inf, label = paste("Median:", round(median_score, 0))),
             color = "#008FD5", vjust = 1, hjust = -0.5, size = 3) +
  geom_vline(data = cleaned_data %>%
               summarize(mean_score = mean(READ), median_score = median(READ)),
             aes(xintercept = mean_score), color = "#77AB43", linetype = "dashed") +  
  geom_text(data = cleaned_data %>%
               summarize(mean_score = mean(READ), median_score = median(READ)),
             aes(x = mean_score - 100, y = Inf, label = paste("Mean:", round(mean_score, 0))),
             color = "#77AB43", vjust = 1, hjust = 0.75, size = 3) +
  scale_x_continuous(breaks = seq(0, 1000, by = 200),  
                     minor_breaks = seq(0, 1000, by = 100)) +
 ylab(NULL) + xlab('Distribution of Reading Scores') 

```

## Science

```{r}
#| fig-show: hide 
#| code-fold: show
sci <- ggplot(data=cleaned_data, 
             aes(x= SCIENCE)) +
geom_histogram(aes(y = after_stat(density)), bins = 20, 
                 boundary = 100,
                 color = "grey25", 
                 fill = "grey90",
                 linewidth = 0.3) +
  geom_density(linewidth = 0.2) +
  coord_cartesian(xlim = c(0, 1000), ylim = c(0, 0.0045))  +
  geom_vline(data = cleaned_data %>%
               summarize(mean_score = mean(SCIENCE), median_score = median(SCIENCE)),
             aes(xintercept = median_score), color = "#008FD5", linetype = "dashed") +  
  geom_text(data = cleaned_data %>%
               summarize(mean_score = mean(SCIENCE), median_score = median(SCIENCE)),
             aes(x = median_score - 100, y = Inf, label = paste("Median:", round(median_score, 0))),
             color = "#008FD5", vjust = 1, hjust = -0.5, size = 3) +
  geom_vline(data = cleaned_data %>%
               summarize(mean_score = mean(SCIENCE), median_score = median(SCIENCE)),
             aes(xintercept = mean_score), color = "#77AB43", linetype = "dashed") +  
  geom_text(data = cleaned_data %>%
               summarize(mean_score = mean(SCIENCE), median_score = median(SCIENCE)),
             aes(x = mean_score - 100, y = Inf, label = paste("Mean:", round(mean_score, 0))),
             color = "#77AB43", vjust = 1, hjust = 0.75, size = 3) +
  scale_x_continuous(breaks = seq(0, 1000, by = 200),  
                     minor_breaks = seq(0, 1000, by = 100)) +
 ylab(NULL) + xlab('Distribution of Science Scores') 
```
:::

The code chunk below prepares the individual histogram plots for each subject as a composite figure.

```{r, fig.width= 12, fig.height = 6}
patchwork <- math + read + sci
patchwork <- patchwork + 
  plot_annotation(
    title = "Singapore students score exceptionally well in Maths, Reading and Science.",
    subtitle = "More than 50% of students have scores higher than the mean across the three PISA subjects.",
    caption = "Data source: OECD PISA 2022",
    theme = theme(plot.title = element_text(size = 50))  
  )
patchwork & theme_fivethirtyeight(base_size = 7) +
  theme(
    panel.grid.minor.x = element_line(linewidth = 0.2, linetype = 'solid', colour = "grey85"),
    plot.title = element_text(face = "bold"), axis.title=element_text(face = "bold", size=9))
```

## 2.2 **Reading vs Mathematics**

::: grid
::: g-col-5
The author stated:

| *The scatterplot... illustrates a positive correlation between reading and mathematics values. As the reading values increase, so do the corresponding mathematics values. This relationship is further emphasised by the upward trend observed in the best fit line. The consistent increase in one variable is mirrored by a proportional increase in the other. In light of these findings, it can be confidently asserted that a positive connection exists, suggesting that engaging in reading contributes to enhanced performance in mathematics among students.*
:::

::: g-col-7
![](images/clipboard-4197173982.png){width="499"}
:::
:::

The author took this perspective because:

| *With reference to this research paper titled â€˜Reading matters more than mathematics in science learning: an analysis of the relationship between student achievement in reading, mathematics, and scienceâ€™ by Yuanze Zhu, the results revealed that proficiency in reading and mathematics strongly correlated with science achievement, with reading exerting a more substantial influence than mathematics.*

### 2.2.4 Makeover

The code chunk below shows two different ways to address overplotting.

::: grid
::: g-col-6
**Plot with transparency**

```{r, fig.width= 4.25, fig.height = 3}
ggplot(cleaned_data, aes(x=READ, y=MATH) ) +  
  geom_point(alpha = 0.03) +
  geom_smooth(method = lm, linewidth = 0.2, color = "#008FD5", alpha = 0.3)  +
  coord_cartesian(xlim = c(0, 1000), ylim = c(0, 1000))  +
  scale_x_continuous(breaks = seq(0, 1000, by = 200),  
                     minor_breaks = seq(0, 1000, by = 100))
```
::: 
::: g-col-6
**Plot with hexagon binning**

```{r, fig.width= 5, fig.height = 3}
ggplot(cleaned_data, aes(x=READ, y=MATH) ) +
  geom_hex(bins = 25, color = "white", alpha = 0.6) +
  scale_fill_gradient(low="#008FD5",high="black")+
  geom_smooth(method = lm, linewidth = 0.2, color = "#008FD5", alpha = 0.4)  +
  coord_cartesian(xlim = c(0, 1000), ylim = c(0, 1000))  +
  scale_x_continuous(breaks = seq(0, 1000, by = 200),  
                     minor_breaks = seq(0, 1000, by = 100))

```
:::
:::
