{
  "hash": "2ba38b455896426b175723ba9ed36110",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 9\"\nsubtitle: \"\" \nauthor: \"Victoria Neo\"\ndate: 03/16/2024\ndate-modified: last-modified\nformat:\n  html:\n    code-fold: true\n    code-summary: \"code block\"\n    code-tools: true\n    code-copy: true\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n  warning: false\n  message: false\n---\n\n\nLubridate is for day, clock is for time. Graphlayouts provide additional layouts that complements ggraph.\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(igraph, tidygraph, ggraph,\n              visNetwork, lubridate, clock,\n              tidyverse, graphlayouts)\n```\n:::\n\n\nIn this step, you will import GAStech_email_node.csv and GAStech_email_edges-v2.csv into RStudio environment by using read_csv() of readr package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGAStech_nodes <- read_csv(\"data/GAStech_email_node.csv\")\nGAStech_edges <- read_csv(\"data/GAStech_email_edge-v2.csv\")\n```\n:::\n\n\nSentDate is currently character field and I want to change it to date field in the DD-MM-YY format. I will then extract out the Weekday from the SentDate. Label = True means the full day is spelt out. Abbr = FALSE means the abbreviated spelling e.g. Mon is turned off.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGAStech_edges <- GAStech_edges %>%\n  mutate(SendDate = dmy(SentDate)) %>%\n  mutate(Weekday = wday(SentDate,\n                        label = TRUE,\n                        abbr = FALSE))\n```\n:::\n\n\nA person have different multi timestamps - I want to find out if same day, then aggregate them out. I want email conversations that are not to oneself, that are \\>2 times of communication and also those that are Work-related.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGAStech_edges_aggregated <- GAStech_edges %>%\n  filter(MainSubject == \"Work related\") %>%\n  group_by(source, target, Weekday) %>%\n    summarise(Weight = n()) %>%\n  filter(source!=target) %>%\n  filter(Weight > 1) %>%\n  ungroup()\n```\n:::\n\n\ntbl is a graph creation method. In R, use `class()` to check the type of dataframe. In network graph, you can use a relationship without direction but if you want to see the interaction/connection, use direction.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGAStech_graph <- tbl_graph(nodes = GAStech_nodes,\n                           edges = GAStech_edges_aggregated, \n                           directed = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(GAStech_nodes)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\" \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(GAStech_graph)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"tbl_graph\" \"igraph\"   \n```\n\n\n:::\n:::\n\n\nUsing ggraph, taking the whole model to do the analysis. Geom_node and geom_link must be changed to deconflict with ggraph. Note that geom_arc will give a curve while geom_link will give a straight line between nodes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggraph(GAStech_graph) + \n  geom_edge_link() +\n  geom_node_point()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(GAStech_graph) + \n  geom_edge_link(aes(colour = 'grey50')) +\n  geom_node_point(aes(colour = 'grey40'))\n\ng + theme_graph(background = 'grey10',\n                text_colour = 'white')\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nLooking at graph layouts: look at features supported by igraph. The code chunks below will be used to plot the network graph using Fruchterman and Reingold layout.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(GAStech_graph, \n            layout = \"fr\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(GAStech_graph, \n            layout = \"kk\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes())\n\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes()) +\n  geom_node_point(aes(colour = Department,\n                      size = 3))\n\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight),\n                 alpha=0.2) +\n  geom_node_point(aes(colour = Department,\n                      size = 3))\n\ng + theme_graph()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nThe darker lines means you have like each day overlay - frequent communication!\n\n\n::: {.cell}\n\n```{.r .cell-code}\ng <- ggraph(GAStech_graph, \n            layout = \"nicely\") +\n  geom_edge_link(aes(width=Weight),\n                 alpha=0.2) +\n  geom_node_point(aes(colour = Department,\n                      size = 3))\n\ng + facet_edges(~Weekday)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex09_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex09_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}